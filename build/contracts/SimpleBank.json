{
  "contractName": "SimpleBank",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogDepositMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogEnrolled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogWithdrawal",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enroll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"LogDepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LogEnrolled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LogWithdrawal\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enroll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"deposit()\":{\"return\":\"The balance of the user after the deposit is made\"},\"enroll()\":{\"return\":\"The users enrolled status\"},\"getBalance()\":{\"return\":\"The balance of the user\"},\"withdraw(uint256)\":{\"details\":\"This does not return any excess ether sent to it\",\"params\":{\"withdrawAmount\":\"amount you want to withdraw\"},\"return\":\"The balance remaining for the user\"}}},\"userdoc\":{\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether into bank\"},\"enroll()\":{\"notice\":\"Enroll a customer with the bank\"},\"getBalance()\":{\"notice\":\"Get balance\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw ether from bank\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SimpleBank.sol\":\"SimpleBank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/SimpleBank.sol\":{\"keccak256\":\"0xd2df190336ea81c9eea305db8970bc5e1ec6c67edca93d268121fa5ff0e59da0\",\"urls\":[\"bzz-raw://b502daeda8b540eb5918aac7ac59f3a3d91888867228ccca62a9042369e65f2f\",\"dweb:/ipfs/QmfDgzQskj3dRsFu5V3sspiT7r71ZcJR1TKsBMMYoPyNE7\"]}},\"version\":1}",
  "bytecode": "0x608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005157600080fd5b5061012d806100616000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c806312065fe014604b5780632e1a7d4d146067578063d0e30db01460a6578063e65f2a7e1460c2575b600080fd5b605160e2565b6040518082815260200191505060405180910390f35b609060048036036020811015607b57600080fd5b810190808035906020019092919050505060e7565b6040518082815260200191505060405180910390f35b60ac60ee565b6040518082815260200191505060405180910390f35b60c860f3565b604051808215151515815260200191505060405180910390f35b600090565b6000919050565b600090565b60009056fea265627a7a723158205179a40e3b59bf6f3a5e20a79119cd50512b149c266e55899ec180129c21a72d64736f6c63430005100032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060465760003560e01c806312065fe014604b5780632e1a7d4d146067578063d0e30db01460a6578063e65f2a7e1460c2575b600080fd5b605160e2565b6040518082815260200191505060405180910390f35b609060048036036020811015607b57600080fd5b810190808035906020019092919050505060e7565b6040518082815260200191505060405180910390f35b60ac60ee565b6040518082815260200191505060405180910390f35b60c860f3565b604051808215151515815260200191505060405180910390f35b600090565b6000919050565b600090565b60009056fea265627a7a723158205179a40e3b59bf6f3a5e20a79119cd50512b149c266e55899ec180129c21a72d64736f6c63430005100032",
  "sourceMap": "246:3289:0:-;;;803:10;787:26;;;;;;;;;;;;;;;;;;;;246:3289;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:3289:0;;;;;;;",
  "deployedSourceMap": "246:3289:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:3289:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:249;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2966:567;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2966:567:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2288:460;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2077:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1698:249;1736:4;1698:249;:::o;2966:567::-;3021:4;2966:567;;;:::o;2288:460::-;2323:4;2288:460;:::o;2077:99::-;2111:4;2077:99;:::o",
  "source": "/*\n * This exercise has been updated to use Solidity version 0.8.5\n * See the latest Solidity updates at\n * https://solidity.readthedocs.io/en/latest/080-breaking-changes.html\n */\n// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <0.9.0;\n\ncontract SimpleBank {\n\n    /* State variables\n     */\n    \n    \n    // Fill in the visibility keyword. \n    // Hint: We want to protect our users balance from other contracts\n    mapping (address => uint) balances ;\n    \n    // Fill in the visibility keyword\n    // Hint: We want to create a getter function and allow contracts to be able\n    //       to see if a user is enrolled.\n    mapping (address => bool) enrolled;\n\n    // Let's make sure everyone knows who owns the bank, yes, fill in the\n    // appropriate visilibility keyword\n    address owner = msg.sender;\n    \n    /* Events - publicize actions to external listeners\n     */\n    \n    // Add an argument for this event, an accountAddress\n    event LogEnrolled();\n\n    // Add 2 arguments for this event, an accountAddress and an amount\n    event LogDepositMade();\n\n    // Create an event called LogWithdrawal\n    // Hint: it should take 3 arguments: an accountAddress, withdrawAmount and a newBalance \n    event LogWithdrawal();\n\n    /* Functions\n     */\n\n    // Fallback function - Called if other functions don't match call or\n    // sent ether without data\n    // Typically, called when invalid data is sent\n    // Added so ether sent to this contract is reverted if the contract fails\n    // otherwise, the sender's money is transferred to contract\n   // function () external payable {\n     //   revert();\n    //}\n\n    /// @notice Get balance\n    /// @return The balance of the user\n    function getBalance() public returns (uint) {\n      // 1. A SPECIAL KEYWORD prevents function from editing state variables;\n      //    allows function to run locally/off blockchain\n      // 2. Get the balance of the sender of this transaction\n    }\n\n    /// @notice Enroll a customer with the bank\n    /// @return The users enrolled status\n    // Emit the appropriate event\n    function enroll() public returns (bool){\n      // 1. enroll of the sender of this transaction\n    }\n\n    /// @notice Deposit ether into bank\n    /// @return The balance of the user after the deposit is made\n    function deposit() public returns (uint) {\n      // 1. Add the appropriate keyword so that this function can receive ether\n    \n      // 2. Users should be enrolled before they can make deposits\n\n      // 3. Add the amount to the user's balance. Hint: the amount can be\n      //    accessed from of the global variable `msg`\n\n      // 4. Emit the appropriate event associated with this function\n\n      // 5. return the balance of sndr of this transaction\n    }\n\n    /// @notice Withdraw ether from bank\n    /// @dev This does not return any excess ether sent to it\n    /// @param withdrawAmount amount you want to withdraw\n    /// @return The balance remaining for the user\n    function withdraw(uint withdrawAmount) public returns (uint) {\n      // If the sender's balance is at least the amount they want to withdraw,\n      // Subtract the amount from the sender's balance, and try to send that amount of ether\n      // to the user attempting to withdraw. \n      // return the user's balance.\n\n      // 1. Use a require expression to guard/ensure sender has enough funds\n\n      // 2. Transfer Eth to the sender and decrement the withdrawal amount from\n      //    sender's balance\n\n      // 3. Emit the appropriate event for this message\n    }\n}\n",
  "sourcePath": "/home/jules/Escritorio/Github/simple-bank-exercise-jcmoya/contracts/SimpleBank.sol",
  "ast": {
    "absolutePath": "project:/contracts/SimpleBank.sol",
    "exportedSymbols": {
      "SimpleBank": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "212:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46
        ],
        "name": "SimpleBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "425:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "434:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "425:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "445:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "enrolled",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "632:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "641:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "632:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "652:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "787:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "787:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 11,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 61,
                "src": "803:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "803:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "LogEnrolled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:2:0"
            },
            "src": "950:20:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 17,
            "name": "LogDepositMade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:2:0"
            },
            "src": "1047:23:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "LogWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:2:0"
            },
            "src": "1213:22:0"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "1742:205:0",
              "statements": []
            },
            "documentation": "@notice Get balance\n @return The balance of the user",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1717:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "1736:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1735:6:0"
            },
            "scope": 46,
            "src": "1698:249:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "2116:60:0",
              "statements": []
            },
            "documentation": "@notice Enroll a customer with the bank\n @return The users enrolled status",
            "id": 31,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enroll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2092:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "2111:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2110:6:0"
            },
            "scope": 46,
            "src": "2077:99:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "2329:419:0",
              "statements": []
            },
            "documentation": "@notice Deposit ether into bank\n @return The balance of the user after the deposit is made",
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "2323:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2322:6:0"
            },
            "scope": 46,
            "src": "2288:460:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "3027:506:0",
              "statements": []
            },
            "documentation": "@notice Withdraw ether from bank\n @dev This does not return any excess ether sent to it\n @param withdrawAmount amount you want to withdraw\n @return The balance remaining for the user",
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "name": "withdrawAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2984:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2984:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2983:21:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "3021:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3020:6:0"
            },
            "scope": 46,
            "src": "2966:567:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "246:3289:0"
      }
    ],
    "src": "212:3324:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SimpleBank.sol",
      "exportedSymbols": {
        "SimpleBank": [
          46
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".16",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "212:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            46
          ],
          "name": "SimpleBank",
          "scope": 47
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "balances",
              "scope": 46,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "434:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 3,
                    "name": "ElementaryTypeName",
                    "src": "445:4:0"
                  }
                ],
                "id": 4,
                "name": "Mapping",
                "src": "425:25:0"
              }
            ],
            "id": 5,
            "name": "VariableDeclaration",
            "src": "425:34:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "enrolled",
              "scope": 46,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "641:7:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "652:4:0"
                  }
                ],
                "id": 8,
                "name": "Mapping",
                "src": "632:25:0"
              }
            ],
            "id": 9,
            "name": "VariableDeclaration",
            "src": "632:34:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "owner",
              "scope": 46,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 10,
                "name": "ElementaryTypeName",
                "src": "787:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "member_name": "sender",
                  "referencedDeclaration": null,
                  "type": "address payable"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 61,
                      "type": "msg",
                      "value": "msg"
                    },
                    "id": 11,
                    "name": "Identifier",
                    "src": "803:3:0"
                  }
                ],
                "id": 12,
                "name": "MemberAccess",
                "src": "803:10:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "787:26:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogEnrolled"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 14,
                "name": "ParameterList",
                "src": "967:2:0"
              }
            ],
            "id": 15,
            "name": "EventDefinition",
            "src": "950:20:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogDepositMade"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 16,
                "name": "ParameterList",
                "src": "1067:2:0"
              }
            ],
            "id": 17,
            "name": "EventDefinition",
            "src": "1047:23:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LogWithdrawal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "ParameterList",
                "src": "1232:2:0"
              }
            ],
            "id": 19,
            "name": "EventDefinition",
            "src": "1213:22:0"
          },
          {
            "attributes": {
              "documentation": "@notice Get balance\n @return The balance of the user",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBalance",
              "scope": 46,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 20,
                "name": "ParameterList",
                "src": "1717:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 21,
                        "name": "ElementaryTypeName",
                        "src": "1736:4:0"
                      }
                    ],
                    "id": 22,
                    "name": "VariableDeclaration",
                    "src": "1736:4:0"
                  }
                ],
                "id": 23,
                "name": "ParameterList",
                "src": "1735:6:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 24,
                "name": "Block",
                "src": "1742:205:0"
              }
            ],
            "id": 25,
            "name": "FunctionDefinition",
            "src": "1698:249:0"
          },
          {
            "attributes": {
              "documentation": "@notice Enroll a customer with the bank\n @return The users enrolled status",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "enroll",
              "scope": 46,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 26,
                "name": "ParameterList",
                "src": "2092:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 31,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 27,
                        "name": "ElementaryTypeName",
                        "src": "2111:4:0"
                      }
                    ],
                    "id": 28,
                    "name": "VariableDeclaration",
                    "src": "2111:4:0"
                  }
                ],
                "id": 29,
                "name": "ParameterList",
                "src": "2110:6:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 30,
                "name": "Block",
                "src": "2116:60:0"
              }
            ],
            "id": 31,
            "name": "FunctionDefinition",
            "src": "2077:99:0"
          },
          {
            "attributes": {
              "documentation": "@notice Deposit ether into bank\n @return The balance of the user after the deposit is made",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "deposit",
              "scope": 46,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 32,
                "name": "ParameterList",
                "src": "2304:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 33,
                        "name": "ElementaryTypeName",
                        "src": "2323:4:0"
                      }
                    ],
                    "id": 34,
                    "name": "VariableDeclaration",
                    "src": "2323:4:0"
                  }
                ],
                "id": 35,
                "name": "ParameterList",
                "src": "2322:6:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 36,
                "name": "Block",
                "src": "2329:419:0"
              }
            ],
            "id": 37,
            "name": "FunctionDefinition",
            "src": "2288:460:0"
          },
          {
            "attributes": {
              "documentation": "@notice Withdraw ether from bank\n @dev This does not return any excess ether sent to it\n @param withdrawAmount amount you want to withdraw\n @return The balance remaining for the user",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdraw",
              "scope": 46,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "withdrawAmount",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 38,
                        "name": "ElementaryTypeName",
                        "src": "2984:4:0"
                      }
                    ],
                    "id": 39,
                    "name": "VariableDeclaration",
                    "src": "2984:19:0"
                  }
                ],
                "id": 40,
                "name": "ParameterList",
                "src": "2983:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "3021:4:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "3021:4:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "3020:6:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 44,
                "name": "Block",
                "src": "3027:506:0"
              }
            ],
            "id": 45,
            "name": "FunctionDefinition",
            "src": "2966:567:0"
          }
        ],
        "id": 46,
        "name": "ContractDefinition",
        "src": "246:3289:0"
      }
    ],
    "id": 47,
    "name": "SourceUnit",
    "src": "212:3324:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-18T11:32:13.162Z",
  "devdoc": {
    "methods": {
      "deposit()": {
        "return": "The balance of the user after the deposit is made"
      },
      "enroll()": {
        "return": "The users enrolled status"
      },
      "getBalance()": {
        "return": "The balance of the user"
      },
      "withdraw(uint256)": {
        "details": "This does not return any excess ether sent to it",
        "params": {
          "withdrawAmount": "amount you want to withdraw"
        },
        "return": "The balance remaining for the user"
      }
    }
  },
  "userdoc": {
    "methods": {
      "deposit()": {
        "notice": "Deposit ether into bank"
      },
      "enroll()": {
        "notice": "Enroll a customer with the bank"
      },
      "getBalance()": {
        "notice": "Get balance"
      },
      "withdraw(uint256)": {
        "notice": "Withdraw ether from bank"
      }
    }
  }
}